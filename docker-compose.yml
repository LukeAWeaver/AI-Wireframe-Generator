services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:3001:3001"
    volumes:
      - ./backend:/app
      - ./backend/logs:/app/logs
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - ENABLE_REQUEST_LOGGING=True
    # depends_on:
    #   db:
    #     condition: service_healthy

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - REACT_APP_API_URL=http://127.0.0.1:3001
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  # db:
  #   image: postgres:15
  #   environment:
  #     - POSTGRES_DB=ai_ux_db
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   ports:
  #     - "127.0.0.1:5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

volumes:
  frontend_node_modules:
  postgres_data: 